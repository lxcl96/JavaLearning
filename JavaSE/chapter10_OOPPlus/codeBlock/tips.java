package chapter10_OOPPlus.codeBlock;
/*
类什么时候会被加载呢？
1、创建对象实例时（new）
2、创建子类对象实例时（new），父类也会被加载
3、使用类的静态成员（静态属性和静态方法）时
 */
public class tips {
    public static void main(String[] args) {

    }
}
/*
    代码块：多次复用时
    代码块又叫初始化块，属于类的成员【是类的一部分】，类似于方法，将逻辑语句封装封装在方法体{}中，通过{}包围起来。

    但是和类的方法不同：
        没有方法名，没有返回值，没有参数，只有方法体，而且不用通过对象或类【显示调用】，而是加载类时，或创建对象时

        【隐式调用】：初始化/加载类/构造器 会自动调用代码块 codeBlock01.java
        【显示调用】：不行

    基本语法：
    修饰符 {
        代码
    }；
    注意：修饰符可写可不写，但是写上必须为static
      用了static是静态代码块
      没用static是普通代码块
      ; 可加可不加
 */


/*
总结:static代码块随着类的加载而执行,普通代码块随着对象实例化而执行 [每new一次,普通代码块就会被执行一次,而static代码块只能随类加载被执行一次]
    细节注意：
    1、static代码块也叫静态代码块，作用就是对类进行初始化，而且它随着类的加载而执行。[只会执行一次是因为类只加载一次]
        【并且只会执行一次，如果是普通代码块，每创建一个对象就会执行一次】codeBlock02.java


    2、类什么时候会被加载呢？ codeBlockDetail.java
        1、创建对象实例时（new）
        2、创建子类对象实例时（new），父类也会被加载 而且父类代码块先被加载
        3、使用类的静态成员（静态属性和静态方法）时
            但是: 只使用类的静态成员时,类和其父类的普通代码块不会被执行 [[普通代码块随着对象实例化而执行]]

 */