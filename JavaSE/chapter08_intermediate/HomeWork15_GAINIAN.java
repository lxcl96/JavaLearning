package chapter08_intermediate;

public class HomeWork15_GAINIAN {
    public static void main(String[] args) {

    }
}
/*
   Q15 问：什么是多态？ 多态的具体体现有哪些？（可举例说明）

    答：方法或对象具有多种形态，是OOP的第三大特征，是建立在封装和继承的基础之上的。
    多态的具体体现：
    1、方法的多态
      a）方法重载体现多态
      b）方法重写体现多态
    2、对象的多态
      a）对象的编译类型和运行类型可以不一致【如：父类的引用指向子类   编译类型（父） = 运行类型（子）】
      b）对象的编译类型在定义时就确定了，无法再变化。
        对象的运行类型是可以变化的，可以通过getClass()来查看其运行类型【向上转型，和向下转型】

    举例说明：
        class AA{};class BB extends AA{};class CC extends BB{};
        AA p = new BB();//此时p运行类型为BB
        AA tmp=p;
        p = new CC();//此时p运行类型变成CC
        p=tmp; //此时p运行类型为BB
    ------------------------------------------------------------------------------------------------------------

    Q16:java的动态绑定机制是什么？ 【看到动态绑定机制就是 方法和属性】
    答：java的动态绑定机制是和多态息息相关的，含义是：当调用对象的方法时，该方法会和对象的内存地址/运行类型绑定；但是调用对象的属性时，
    没有动态绑定机制所有属性就是哪里声明哪里调用。
    举例：看HomeWork11
 */

//总结就是：多态和动态绑定机制是一起的出现的
//多态分：方法和对象的多态
//动态绑定机制分：方法有这个【可以调用被子类重写的方法】，属性没这个【不可以调用和子类相同的的属性】