<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">




    <!--  <context-param>是上下文参数，他属于整个web工程，所以其他的filter过滤器，listening监听器      -->
    <context-param>
        <param-name>userName</param-name>
        <param-value>context</param-value>
    </context-param>


    <!--  servlet标签给tomcat配置servlet程序  -->
    <servlet>
        <!--    servlet-name给servlet程序起一个别名，一般是类名    -->
        <servlet-name>HelloServlet</servlet-name>
        <!--    是servlet程序的全类名    -->
        <servlet-class>com.ly.servlet.HelloServlet</servlet-class>

        <!--    init-parm 是servlet初始化参数-->
        <init-param>
            <param-name>url1</param-name>
            <param-value>jdbc:mysql://localhost:3306/test1</param-value>
        </init-param>
        <init-param>
            <param-name>username1</param-name>
            <param-value>root1</param-value>
        </init-param>
        <init-param>
            <param-name>password1</param-name>
            <param-value>1234567</param-value>
        </init-param>
    </servlet>


    <!--  和上面的servlet对应， servlet-mapping标签给servlet程序配置访问地址 -->
    <servlet-mapping>
        <!--   servlet-name标签是为了告诉了服务器，我当前配置的地址给哪个Servlet程序使用   ，一般是类名【必须和上面的name一致 】  -->
        <servlet-name>HelloServlet</servlet-name>


        <!-- url-pattern标签配置浏览器访问地址

            / 在服务器解析的时候，表示地址为：http:ip:port/工程路径  【工程路径就是tomcat里配置的/06_servlet_war_exploded/】
            例：http://localhost:8080/06_servlet_war_exploded/


           /hello
           http://localhost:8080/06_servlet_war_exploded/hello
            -->

        <url-pattern>/hello</url-pattern>
    </servlet-mapping>
    
    
    
    
    
    
    
    
    
    <servlet>
        <servlet-name>HelloServlet2</servlet-name>
        <servlet-class>com.ly.servlet.HelloServlet2</servlet-class>

        <!--    init-parm 是servlet初始化参数-->
        <init-param>
            <param-name>url2</param-name>
            <param-value>jdbc:mysql://localhost:3306/test2</param-value>
        </init-param>
        <init-param>
            <param-name>username2</param-name>
            <param-value>root2</param-value>
        </init-param>
        <init-param>
            <param-name>password</param-name>
            <param-value>12345678</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>HelloServlet2</servlet-name>
        <url-pattern>/hello2</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>HelloServlet3</servlet-name>
        <servlet-class>com.ly.servlet.HelloServlet3</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>HelloServlet3</servlet-name>
        <url-pattern>/hello3</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>ContextServlet</servlet-name>
        <servlet-class>com.ly.servlet.ContextServlet</servlet-class>


    </servlet>

    <servlet-mapping>
        <servlet-name>ContextServlet</servlet-name>
        <url-pattern>/contextServlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ContextServlet1</servlet-name>
        <servlet-class>com.ly.servlet.ContextServlet1</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>ContextServlet1</servlet-name>
        <url-pattern>/ct1</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ContextServlet2</servlet-name>
        <servlet-class>com.ly.servlet.ContextServlet2</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>ContextServlet2</servlet-name>
        <url-pattern>/ct2</url-pattern>
    </servlet-mapping>
</web-app>
